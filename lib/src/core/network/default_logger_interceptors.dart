import 'dart:convert';

import 'package:dio/dio.dart';
import 'package:flutter/foundation.dart';
import 'package:flutter_kit/src/utils/logger.dart';

/// æ—¥å¿—æ‹¦æˆªå™¨
class DefaultLoggerInterceptors extends InterceptorsWrapper {
  @override
  void onRequest(RequestOptions options, RequestInterceptorHandler handler) {
    LogUtils.instance.i("""âœ… start request url ${options.uri.toString()}
âœ… ==================================================================
âœ… url:${options.uri.toString()}
âœ… method:${options.method}
âœ… header:${options.headers}
âœ… queryParameters:${options.queryParameters}
âœ… body:${options.data}
âœ… ==================================================================""");
    handler.next(options);
  }

  @override
  void onResponse(Response response, ResponseInterceptorHandler handler) {
    dynamic dataBody;
    try {
      dataBody = jsonEncode(response.data ?? '');
    } catch (e, s) {
      dataBody = response.data;
      debugPrint('jsonEncode print error $e---$s');
    }

    LogUtils.instance.i(
        """ðŸ‡¨ðŸ‡³ server interface response address ${response.requestOptions.uri}
ðŸ‡¨ðŸ‡³ ==================================================================
ðŸ‡¨ðŸ‡³ Return Data
ðŸ‡¨ðŸ‡³ ==================================================================
ðŸ‡¨ðŸ‡³ $dataBody
ðŸ‡¨ðŸ‡³ ==================================================================""");
    handler.next(response);
  }
}
